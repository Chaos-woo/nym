# 版本目录管理 - Version Catalog for Dependency Management
[versions]
# AI 服务集成依赖版本
openai-gpt = "0.18.2"
azure-openai = "1.0.0-beta.8"

# 网络通信依赖版本
okhttp = "4.12.0"
retrofit = "2.9.0"

# 序列化和工具库版本
kotlinx-serialization = "1.6.2"
caffeine = "3.1.8"
guava = "32.1.3-jre"

# 测试框架版本
mockk = "1.13.8"
junit-jupiter = "5.10.1"
testcontainers = "1.19.3"

# 代码质量工具版本
detekt = "1.23.4"
ktlint = "0.50.0"
kotest = "5.8.0"

# IntelliJ 平台相关版本
intellij-gradle-plugin = "1.16.1"

[libraries]
# AI 服务集成库
openai-gpt3-java = { module = "com.theokanning.openai-gpt3-java:service", version.ref = "openai-gpt" }
azure-ai-openai = { module = "com.azure:azure-ai-openai", version.ref = "azure-openai" }

# 网络通信库
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-kotlinx = { module = "com.squareup.retrofit2:converter-kotlinx-serialization", version.ref = "retrofit" }

# 序列化和工具库
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }

# 测试框架库
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-jupiter" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }

# 代码质量工具库
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }

[bundles]
# AI 服务集成包
ai-services = ["openai-gpt3-java", "azure-ai-openai"]

# 网络通信包
networking = ["okhttp", "retrofit", "retrofit-converter-kotlinx"]

# 序列化和工具包
serialization-utils = ["kotlinx-serialization-json", "caffeine", "guava"]

# 测试框架包
testing = ["mockk", "junit-jupiter-api", "junit-jupiter-engine", "junit-jupiter-params"]

# 集成测试包
integration-testing = ["testcontainers", "testcontainers-junit-jupiter"]

# 代码质量工具包
code-quality = ["detekt-formatting", "kotest-runner-junit5", "kotest-assertions-core"]

[plugins]
# Gradle 插件定义
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }